language: cpp
dist: trusty

addons:
  apt:
    sources:
      - llvm-toolchain-trusty-4.0
      - ubuntu-toolchain-r-test
    packages:
      - clang-4.0
      - g++-5
      - zlib1g-dev
      - libhdf5-dev

matrix:
  include:
    - compiler: gcc
      env: COMPILERS="CXX=g++-4.8 && CC=gcc-4.8" TOOLSET=gcc VISUAL_DEBUG=ON CCTAG_SERIALIZE=ON WITH_CUDA=ON
    - compiler: gcc
      env: COMPILERS="CXX=g++-4.8 && CC=gcc-4.8" TOOLSET=gcc VISUAL_DEBUG=OFF CCTAG_SERIALIZE=ON WITH_CUDA=OFF
    - compiler: gcc-5
      env: COMPILERS="CXX=g++-5 && CC=gcc-5" TOOLSET=gcc VISUAL_DEBUG=ON CCTAG_SERIALIZE=ON WITH_CUDA=ON
    - compiler: gcc-5
      env: COMPILERS="CXX=g++-5 && CC=gcc-5" TOOLSET=gcc VISUAL_DEBUG=OFF CCTAG_SERIALIZE=ON WITH_CUDA=OFF
    - compiler: clang
      env: COMPILERS="CXX=clang++ && CC=clang" TOOLSET=clang VISUAL_DEBUG=OFF CCTAG_SERIALIZE=OFF WITH_CUDA=ON
    - compiler: clang
      env: COMPILERS="CXX=clang++ && CC=clang" TOOLSET=clang VISUAL_DEBUG=ON CCTAG_SERIALIZE=ON WITH_CUDA=OFF
    - compiler: clang-4.0
      env: COMPILERS="CXX=clang++-4.0 && CC=clang-4.0" TOOLSET=clang VISUAL_DEBUG=OFF CCTAG_SERIALIZE=OFF WITH_CUDA=ON
    - compiler: clang-4.0
      env: COMPILERS="CXX=clang++-4.0 && CC=clang-4.0" TOOLSET=clang VISUAL_DEBUG=ON CCTAG_SERIALIZE=ON WITH_CUDA=OFF


env:
  global:
    - NUM_CPU="`grep processor /proc/cpuinfo | wc -l`"; echo $NUM_CPU

before_install:
    - eval "${COMPILERS}"

script:
  - cc --version
  - c++ --version
  - gcc --version
  - g++ --version
  - cmake --version
  - ${CXX} --version
  - ${CC} --version
  - echo "VISUAL_DEBUG=${VISUAL_DEBUG} CCTAG_SERIALIZE=${CCTAG_SERIALIZE} WITH_CUDA=${WITH_CUDA}"
  - mkdir build
  - cd build
  - cmake ..
