name: Continuous Integration

on:
  push:
    branches:
      - master
      - develop
    # Skip jobs when only documentation files are changed
    paths-ignore:
      - '**.md'
      - '**.rst'
      - 'docs/**'
  pull_request:
    paths-ignore:
      - '**.md'
      - '**.rst'
      - 'docs/**'

jobs:
  
  build_windows:
      runs-on: windows-latest
      strategy:
        matrix:
          config: [ Debug, Release ]
      env:
        buildDir: '${{ github.workspace }}\build\'
        vcpkgDir: '${{ github.workspace }}\..\vcpkg'
        # commit for version 2023.04.15
        COMMIT_ID: 501db0f17ef6df184fcdbfbe0f87cde2313b6ab1

      steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install latest CMake.
        uses: lukka/get-cmake@latest

      - uses: Jimver/cuda-toolkit@v0.2.10
        id: cuda-toolkit
        with:
          cuda: '12.1.0'

      - run: nvcc -V

      # Restore from cache the previously built ports. If a "cache miss" occurs, then vcpkg is bootstrapped. Since a the vcpkg.json is being used later on to install the packages when run-cmake runs, no packages are installed at this time and the input 'setupOnly:true' is mandatory.
      - name: vcpkg - Setup dependencies
        uses: lukka/run-vcpkg@v7
        with:
          # Just install vcpkg for now, do not install any ports in this step yet.
          setupOnly: false
          # Location of the vcpkg submodule in the Git repository.
          vcpkgDirectory: ${{ env.vcpkgDir }}
          vcpkgGitCommitId: ${{ env.COMMIT_ID }}
          vcpkgArguments: cuda devil boost-system boost-program-options boost-thread boost-filesystem
          vcpkgTriplet: x64-windows
          # doNotCache: true
          # This is used to unbreak cached artifacts if for some reason dependencies fail to build,
          # the action does not notice it and saves broken artifacts.
          appendedCacheKey: cache105

      - name: vcpkg - Display installed packages
        run:
            ${{ env.vcpkgDir }}\vcpkg.exe list